# This is an alternative apigateway.conf file which set 
# an $apikey variable from the run time environment used
# to start nginx. This variable is then checked against
# the X-API-KEY heaader in each request. Only matching
# requests are processed through the API gateway.
#
# To use this configuration do the following in your 
# Dockerfile for the container build:
#
# COPY apigateway_apikey.conf /etc/nginx/apigateway.conf
#
server {
   # TLS listener
   listen 443 ssl;
   listen [::]:443 ssl;

   # self-signed certificates
   ssl_certificate /etc/ssl/nginx-selfsigned.crt;
   ssl_certificate_key /etc/ssl/nginx-selfsigned-key.default;

   # secured default Unit listener access
   rewrite ^/$ /TrustedDevicesUI last;

   # read X_API_KEY from environment
   set_by_lua $api_key 'return os.getenv("X_API_KEY")';

   # secured remote access to Unit configuration
   location  /config {
       auth_request /_validate_apikey;
       if ($request_method = OPTIONS) {
           add_header Allow "*";
           add_header Access-Control-Allow-Headers "*";
           add_header Access-Control-Allow-Origin "*";
           return 200;
       }
       proxy_pass http://unix:/var/run/unit/control.sock:/config;
   }
   location /config/ {
       auth_request /_validate_apikey;
       if ($request_method = OPTIONS) {
           add_header Allow "*";
           add_header Access-Control-Allow-Headers "*";
           add_header Access-Control-Allow-Origin "*";
           return 200;
       }
       proxy_pass http://unix:/var/run/unit/control.sock:/config/;
   }


   # secured remote access to iControl REST
   location /mgmt {
       auth_request /_validate_apikey;
       if ($request_method = OPTIONS) {
           add_header Allow "*";
           add_header Access-Control-Allow-Headers "*";
           add_header Access-Control-Allow-Origin "*";
           return 200;
       }
       proxy_pass http://127.0.0.1:8100;
       proxy_set_header Authorization "Basic YWRtaW46";
   }

   # Don't require auth for the Swagger UI
   location /TrustedDevicesUI {
       if ($request_method = OPTIONS) {
           add_header Allow "*";
           add_header Access-Control-Allow-Headers "*";
           add_header Access-Control-Allow-Origin "*";
           return 200;
       }
       proxy_pass http://127.0.0.1:8105;
   }


   # send all other URI path requests to Unit for processing
   location / {
       auth_request /_validate_apikey;
       if ($request_method = OPTIONS) {
           add_header Allow "*";
           add_header Access-Control-Allow-Headers "*";
           add_header Access-Control-Allow-Origin "*";
           return 200;                                       
       }
       proxy_pass http://127.0.0.1:8105;
   }

   location = /_validate_apikey {
        internal;
        if ($http_x_api_key = "") {
            return 204; # Unauthorized
        }
        if ($http_X_api_key = $api_key) {
            return 204; # OK (no content)
        }
        return 403; # Forbidden
   }
}

# local access for Unit configuration for local scripting
server {
    listen 127.0.0.1:8101;
    location / {
        proxy_pass http://unix:/var/run/unit/control.sock;
    }
}